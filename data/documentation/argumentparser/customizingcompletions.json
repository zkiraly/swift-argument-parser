{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ArgumentParser"},{"type":"text","text":" provides default completions for any types that it can. For example, an "},{"type":"codeVoice","code":"@Option"},{"type":"text","text":" property that is a "},{"type":"codeVoice","code":"CaseIterable"},{"type":"text","text":" type will automatically have the correct values as completion suggestions."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When declaring an option or argument, you can customize the completions that are offered by specifying a "},{"type":"codeVoice","code":"CompletionKind"},{"type":"text","text":". With this completion kind you can specify that the value should be a file, a directory, or one of a list of strings:"}]},{"type":"codeListing","syntax":"swift","code":["struct Example: ParsableCommand {","    @Option(help: \"The file to read from.\", completion: .file())","    var input: String","","    @Option(help: \"The output directory.\", completion: .directory)","    var outputDir: String","","    @Option(help: \"The preferred file format.\", completion: .list([\"markdown\", \"rst\"]))","    var format: String","","    enum CompressionType: String, CaseIterable, ExpressibleByArgument {","        case zip, gzip","    }","","    @Option(help: \"The compression type to use.\")","    var compression: CompressionType","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The generated completion script will suggest only file names for the "},{"type":"codeVoice","code":"--input"},{"type":"text","text":" option, only directory names for "},{"type":"codeVoice","code":"--output-dir"},{"type":"text","text":", and only the strings "},{"type":"codeVoice","code":"markdown"},{"type":"text","text":" and "},{"type":"codeVoice","code":"rst"},{"type":"text","text":" for "},{"type":"codeVoice","code":"--format"},{"type":"text","text":". The "},{"type":"codeVoice","code":"--compression"},{"type":"text","text":" option uses the default completions for a "},{"type":"codeVoice","code":"CaseIterable"},{"type":"text","text":" type, so the completion script will suggest "},{"type":"codeVoice","code":"zip"},{"type":"text","text":" and "},{"type":"codeVoice","code":"gzip"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can define the default completion kind for custom "},{"type":"codeVoice","code":"ExpressibleByArgument"},{"type":"text","text":" types by implementing "},{"type":"codeVoice","code":"static var defaultCompletionKind: CompletionKind"},{"type":"text","text":". For example, any arguments or options with this "},{"type":"codeVoice","code":"File"},{"type":"text","text":" type will automatically use files for completions:"}]},{"type":"codeListing","syntax":"swift","code":["struct File: Hashable, ExpressibleByArgument {","    var path: String","    ","    init?(argument: String) {","        self.path = argument","    }","    ","    static var defaultCompletionKind: CompletionKind {","        .file()","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For even more control over the suggested completions, you can specify a function that will be called during completion by using the "},{"type":"codeVoice","code":".custom"},{"type":"text","text":" completion kind."}]},{"type":"codeListing","syntax":"swift","code":["func listExecutables(_ arguments: [String]) -> [String] {","    \/\/ Generate the list of executables in the current directory","}","","struct SwiftRun {","    @Option(help: \"The target to execute.\", completion: .custom(listExecutables))","    var target: String?","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example, when a user requests completions for the "},{"type":"codeVoice","code":"--target"},{"type":"text","text":" option, the completion script runs the "},{"type":"codeVoice","code":"SwiftRun"},{"type":"text","text":" command-line tool with a special syntax, calling the "},{"type":"codeVoice","code":"listExecutables"},{"type":"text","text":" function with an array of the arguments given so far."}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/argumentparser\/customizingcompletions"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/CustomizingCompletions","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Provide custom shell completions for your command-line toolâ€™s arguments and options."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Customizing Completions","role":"article","modules":[{"name":"ArgumentParser"}]},"hierarchy":{"paths":[["doc:\/\/ArgumentParser\/documentation\/ArgumentParser"]]},"seeAlsoSections":[{"title":"Shell Completion Scripts","identifiers":["doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/InstallingCompletionScripts","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/CompletionKind"],"generated":true}],"references":{"doc://ArgumentParser/documentation/ArgumentParser":{"role":"collection","title":"ArgumentParser","abstract":[{"type":"text","text":"Straightforward, type-safe argument parsing for Swift."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser"},"doc://ArgumentParser/documentation/ArgumentParser/CompletionKind":{"role":"symbol","title":"CompletionKind","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CompletionKind"}],"abstract":[{"type":"text","text":"The type of completion to use for an argument or option."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/CompletionKind","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CompletionKind"}],"url":"\/documentation\/argumentparser\/completionkind"},"doc://ArgumentParser/documentation/ArgumentParser/InstallingCompletionScripts":{"role":"article","title":"Generating and Installing Completion Scripts","abstract":[{"type":"text","text":"Install shell completion scripts generated by your command-line tool."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/InstallingCompletionScripts","kind":"article","type":"topic","url":"\/documentation\/argumentparser\/installingcompletionscripts"}}}