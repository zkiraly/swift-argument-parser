{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"remaining"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV","text":"ArgumentArrayParsingStrategy"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, for a parsable type defined as following:"}]},{"type":"codeListing","syntax":null,"code":["struct Options: ParsableArguments {","    @Flag var verbose: Bool","    @Argument(parsing: .remaining) var words: [String]","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Parsing the input "},{"type":"codeVoice","code":"--verbose one two"},{"type":"text","text":" or "},{"type":"codeVoice","code":"one two --verbose"},{"type":"text","text":" would result"},{"type":"text","text":" "},{"type":"text","text":"in "},{"type":"codeVoice","code":"Options(verbose: true, words: [\"one\", \"two\"])"},{"type":"text","text":". Parsing the input"},{"type":"text","text":" "},{"type":"codeVoice","code":"one two --other"},{"type":"text","text":" would result in an unknown option error for "},{"type":"codeVoice","code":"--other"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is the default strategy for parsing argument arrays."}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/argumentparser\/argumentarrayparsingstrategy\/remaining"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/remaining","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Parse only unprefixed values from the command-line input, ignoring"},{"type":"text","text":" "},{"type":"text","text":"any inputs that have a dash prefix. This is the default strategy."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"remaining"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ArgumentArrayParsingStrategy","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV"}],"title":"remaining","roleHeading":"Type Property","role":"symbol","symbolKind":"property","externalID":"s:14ArgumentParser0A20ArrayParsingStrategyV9remainingACvpZ","modules":[{"name":"ArgumentParser"}]},"hierarchy":{"paths":[["doc:\/\/ArgumentParser\/documentation\/ArgumentParser","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Argument","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy"]]},"references":{"doc://ArgumentParser/documentation/ArgumentParser/Argument":{"role":"symbol","title":"Argument","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Argument"}],"abstract":[{"type":"text","text":"A property wrapper that represents a positional command-line argument."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Argument","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Argument"}],"url":"\/documentation\/argumentparser\/argument"},"doc://ArgumentParser/documentation/ArgumentParser/ArgumentArrayParsingStrategy":{"role":"symbol","title":"ArgumentArrayParsingStrategy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArgumentArrayParsingStrategy"}],"abstract":[{"type":"text","text":"The strategy to use when parsing multiple values from positional arguments"},{"type":"text","text":" "},{"type":"text","text":"into an array."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ArgumentArrayParsingStrategy"}],"url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy"},"doc://ArgumentParser/documentation/ArgumentParser/ArgumentArrayParsingStrategy/remaining":{"role":"symbol","title":"remaining","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"remaining"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ArgumentArrayParsingStrategy","preciseIdentifier":"s:14ArgumentParser0A20ArrayParsingStrategyV"}],"abstract":[{"type":"text","text":"Parse only unprefixed values from the command-line input, ignoring"},{"type":"text","text":" "},{"type":"text","text":"any inputs that have a dash prefix. This is the default strategy."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArgumentArrayParsingStrategy\/remaining","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser\/argumentarrayparsingstrategy\/remaining"},"doc://ArgumentParser/documentation/ArgumentParser":{"role":"collection","title":"ArgumentParser","abstract":[{"type":"text","text":"Straightforward, type-safe argument parsing for Swift."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser"}}}