{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"unconditional"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/SingleValueParsingStrategy","preciseIdentifier":"s:14ArgumentParser26SingleValueParsingStrategyV","text":"SingleValueParsingStrategy"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For inputs such as "},{"type":"codeVoice","code":"--foo --bar baz"},{"type":"text","text":", if "},{"type":"codeVoice","code":".unconditional"},{"type":"text","text":" is used for "},{"type":"codeVoice","code":"foo"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"this would read "},{"type":"codeVoice","code":"--bar"},{"type":"text","text":" as the value for "},{"type":"codeVoice","code":"foo"},{"type":"text","text":" and would use "},{"type":"codeVoice","code":"baz"},{"type":"text","text":" as"},{"type":"text","text":" "},{"type":"text","text":"the next positional argument."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This allows reading negative numeric values or capturing flags to be"},{"type":"text","text":" "},{"type":"text","text":"passed through to another program since the leading hyphen is normally"},{"type":"text","text":" "},{"type":"text","text":"interpreted as the start of another option."}]},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This is usually "},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" what users would expect. Use with caution."}]}]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/argumentparser\/singlevalueparsingstrategy\/unconditional"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/unconditional","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Parse the next input, even if it could be interpreted as an option or"},{"type":"text","text":" "},{"type":"text","text":"flag."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"unconditional"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SingleValueParsingStrategy","preciseIdentifier":"s:14ArgumentParser26SingleValueParsingStrategyV"}],"title":"unconditional","roleHeading":"Type Property","role":"symbol","symbolKind":"property","externalID":"s:14ArgumentParser26SingleValueParsingStrategyV13unconditionalACvpZ","modules":[{"name":"ArgumentParser"}]},"hierarchy":{"paths":[["doc:\/\/ArgumentParser\/documentation\/ArgumentParser","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Option","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/SingleValueParsingStrategy"]]},"references":{"doc://ArgumentParser/documentation/ArgumentParser":{"role":"collection","title":"ArgumentParser","abstract":[{"type":"text","text":"Straightforward, type-safe argument parsing for Swift."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser"},"doc://ArgumentParser/documentation/ArgumentParser/SingleValueParsingStrategy":{"role":"symbol","title":"SingleValueParsingStrategy","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SingleValueParsingStrategy"}],"abstract":[{"type":"text","text":"The strategy to use when parsing a single value from "},{"type":"codeVoice","code":"@Option"},{"type":"text","text":" arguments."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/SingleValueParsingStrategy","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SingleValueParsingStrategy"}],"url":"\/documentation\/argumentparser\/singlevalueparsingstrategy"},"doc://ArgumentParser/documentation/ArgumentParser/SingleValueParsingStrategy/unconditional":{"role":"symbol","title":"unconditional","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"unconditional"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SingleValueParsingStrategy","preciseIdentifier":"s:14ArgumentParser26SingleValueParsingStrategyV"}],"abstract":[{"type":"text","text":"Parse the next input, even if it could be interpreted as an option or"},{"type":"text","text":" "},{"type":"text","text":"flag."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/SingleValueParsingStrategy\/unconditional","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser\/singlevalueparsingstrategy\/unconditional"},"doc://ArgumentParser/documentation/ArgumentParser/Option":{"role":"symbol","title":"Option","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Option"}],"abstract":[{"type":"text","text":"A property wrapper that represents a command-line option."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Option","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Option"}],"url":"\/documentation\/argumentparser\/option"}}}