{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/NameSpecification","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV","text":"NameSpecification"},{"kind":"text","text":" = .long, "},{"kind":"externalParam","text":"inversion"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/FlagInversion","preciseIdentifier":"s:14ArgumentParser13FlagInversionV","text":"FlagInversion"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exclusivity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/FlagExclusivity","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV","text":"FlagExclusivity"},{"kind":"text","text":" = .chooseLast, "},{"kind":"externalParam","text":"help"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArgumentHelp","preciseIdentifier":"s:14ArgumentParser0A4HelpV","text":"ArgumentHelp"},{"kind":"text","text":"? = nil)"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"name","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A specification for what names are allowed for this flag."}]}]},{"name":"wrappedValue","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A default value to use for this property, provided implicitly by the compiler during property wrapper initialization."}]}]},{"name":"inversion","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The method for converting this flagâ€™s name into an on\/off pair."}]}]},{"name":"exclusivity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The behavior to use when an on\/off pair of flags is specified."}]}]},{"name":"help","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Information about how to use this flag."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this initializer to create a Boolean flag with an on\/off pair."},{"type":"text","text":" "},{"type":"text","text":"With the following declaration, for example, the user can specify either "},{"type":"codeVoice","code":"--use-https"},{"type":"text","text":" or "},{"type":"codeVoice","code":"--no-use-https"},{"type":"text","text":" to set the "},{"type":"codeVoice","code":"useHTTPS"},{"type":"text","text":" flag to "},{"type":"codeVoice","code":"true"},{"type":"text","text":" or "},{"type":"codeVoice","code":"false"},{"type":"text","text":", respectively."}]},{"type":"codeListing","syntax":"swift","code":["@Flag(inversion: .prefixedNo)","var useHTTPS: Bool"]}]}],"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-12okg"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-12okg","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates a Boolean property with no default value that reads its value from the presence of one or more inverted flags."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init(name:inversion:exclusivity:help:)","roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NameSpecification","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inversion"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FlagInversion","preciseIdentifier":"s:14ArgumentParser13FlagInversionV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exclusivity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FlagExclusivity","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"help"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ArgumentHelp","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"kind":"text","text":"?)"}],"symbolKind":"init","externalID":"s:14ArgumentParser4FlagVAASbRszlE4name9inversion11exclusivity4helpACySbGAA17NameSpecificationV_AA0C9InversionVAA0C11ExclusivityVAA0A4HelpVSgtcfc","extendedModule":"ArgumentParser","modules":[{"name":"ArgumentParser"}]},"hierarchy":{"paths":[["doc:\/\/ArgumentParser\/documentation\/ArgumentParser","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Flag"]]},"seeAlsoSections":[{"title":"Boolean Flags with Inversions","identifiers":["doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:inversion:exclusivity:help:)","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-1h8f7","doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/FlagInversion"],"generated":true}],"references":{"doc://ArgumentParser/documentation/ArgumentParser/NameSpecification":{"role":"symbol","title":"NameSpecification","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NameSpecification"}],"abstract":[{"type":"text","text":"A specification for how to represent a property as a command-line argument"},{"type":"text","text":" "},{"type":"text","text":"label."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/NameSpecification","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NameSpecification"}],"url":"\/documentation\/argumentparser\/namespecification"},"doc://ArgumentParser/documentation/ArgumentParser/Flag/init(name:inversion:exclusivity:help:)-12okg":{"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init(name:inversion:exclusivity:help:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NameSpecification","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inversion"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FlagInversion","preciseIdentifier":"s:14ArgumentParser13FlagInversionV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exclusivity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FlagExclusivity","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"help"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ArgumentHelp","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Creates a Boolean property with no default value that reads its value from the presence of one or more inverted flags."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-12okg","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-12okg"},"doc://ArgumentParser/documentation/ArgumentParser/FlagInversion":{"role":"symbol","title":"FlagInversion","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlagInversion"}],"abstract":[{"type":"text","text":"The options for converting a Boolean flag into a "},{"type":"codeVoice","code":"true"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"false"},{"type":"text","text":" pair."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/FlagInversion","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlagInversion"}],"url":"\/documentation\/argumentparser\/flaginversion"},"doc://ArgumentParser/documentation/ArgumentParser/ArgumentHelp":{"role":"symbol","title":"ArgumentHelp","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArgumentHelp"}],"abstract":[{"type":"text","text":"Help information for a command-line argument."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/ArgumentHelp","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ArgumentHelp"}],"url":"\/documentation\/argumentparser\/argumenthelp"},"doc://ArgumentParser/documentation/ArgumentParser":{"role":"collection","title":"ArgumentParser","abstract":[{"type":"text","text":"Straightforward, type-safe argument parsing for Swift."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser"},"doc://ArgumentParser/documentation/ArgumentParser/Flag/init(wrappedValue:name:inversion:exclusivity:help:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init(wrappedValue:name:inversion:exclusivity:help:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NameSpecification","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inversion"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FlagInversion","preciseIdentifier":"s:14ArgumentParser13FlagInversionV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exclusivity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FlagExclusivity","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"help"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ArgumentHelp","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Creates a Boolean property with default value provided by standard Swift default value syntax that reads its value from the presence of one or more inverted flags."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(wrappedValue:name:inversion:exclusivity:help:)","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser\/flag\/init(wrappedvalue:name:inversion:exclusivity:help:)"},"doc://ArgumentParser/documentation/ArgumentParser/Flag":{"role":"symbol","title":"Flag","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Flag"}],"abstract":[{"type":"text","text":"A property wrapper that represents a command-line flag."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Flag","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Flag"}],"url":"\/documentation\/argumentparser\/flag"},"doc://ArgumentParser/documentation/ArgumentParser/Flag/init(name:inversion:exclusivity:help:)-1h8f7":{"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Optional<Bool>"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init(name:inversion:exclusivity:help:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NameSpecification","preciseIdentifier":"s:14ArgumentParser17NameSpecificationV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"inversion"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FlagInversion","preciseIdentifier":"s:14ArgumentParser13FlagInversionV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exclusivity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FlagExclusivity","preciseIdentifier":"s:14ArgumentParser15FlagExclusivityV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"help"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ArgumentHelp","preciseIdentifier":"s:14ArgumentParser0A4HelpV"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Creates a Boolean property that reads its value from the presence of"},{"type":"text","text":" "},{"type":"text","text":"one or more inverted flags."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/Flag\/init(name:inversion:exclusivity:help:)-1h8f7","kind":"symbol","type":"topic","url":"\/documentation\/argumentparser\/flag\/init(name:inversion:exclusivity:help:)-1h8f7"},"doc://ArgumentParser/documentation/ArgumentParser/FlagExclusivity":{"role":"symbol","title":"FlagExclusivity","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlagExclusivity"}],"abstract":[{"type":"text","text":"The options for treating enumeration-based flags as exclusive."}],"identifier":"doc:\/\/ArgumentParser\/documentation\/ArgumentParser\/FlagExclusivity","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlagExclusivity"}],"url":"\/documentation\/argumentparser\/flagexclusivity"}}}